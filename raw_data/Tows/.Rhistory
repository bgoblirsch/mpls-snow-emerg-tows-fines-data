sf_trees
x <- summarise(longitude, avglon = mean(longitude))
x
format(round(x,5), nsmall=2)
sf_trees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-28/sf_trees.csv')
sf_trees
view(filter(sf_trees, dbh > 20))
filter(sf_trees, dbh > 20))
filter(sf_trees, dbh > 20)
filter(sf_trees, dbh > 30)
filter(sf_trees, dbh > 40)
filter(sf_trees, dbh > 60)
filter(sf_trees, dbh > 80)
filter(sf_trees, dbh > 1000)
filter(sf_trees, dbh > 100)
filter(sf_trees, dbh > 200)
longitude <- dplyr::select(filter(sf_trees, !is.na(longitude)), longitude)
longitude
?format
summarize(sf_trees, mean(longitude))
summarize(sf_trees, x= mean(longitude))
x <- summarise(longitude, longitude = mean(longitude))
x
x(1)
x[1]
1[1][1]
x[1][1]
value(x)
options(pillar.sigfig = 6)
x
min(latitude)
install.packages(c("devtools", "stringr"))
install.packages("maps")
install.packages("mapdata")
# 1.6 were delayed 1+ hour but gained 30 min in flight
filter(flights, dep_delay >= 60 & (dep_delay - arr_delay >= 30))
source('~/Machine-Learning/r4ds/chapter5.R', encoding = 'UTF-8')
# 1.6 were delayed 1+ hour but gained 30 min in flight
filter(flights, dep_delay >= 60 & (dep_delay - arr_delay >= 30))
source('~/DataScience/SFtrees/sftrees.r')
devtools::install_github("dkahle/ggmap")
devtools::install_github("dkahle/ggmap")
devtools::install_github("dkahle/ggmap", force= TRUE)
# 1.6 were delayed 1+ hour but gained 30 min in flight
filter(flights, dep_delay >= 60 & (dep_delay - arr_delay >= 30))
# 1.6 were delayed 1+ hour but gained 30 min in flight
filter(flights, dep_delay >= 60 & (dep_delay - arr_delay > 30))
# 1.6 were delayed 1+ hour but gained 30 min in flight
filter(flights, dep_delay >= 60 & (dep_delay - arr_delay > 30))
usa <- map_data("usa")
dim(usa)
head(usa)
tail(usa)
w2hr <- map_data("world2Hires")
library(mapdata)
exit
quit
source('~/GitHub/mpls-snow-emerg-tows-fines-data/main.R')
source('~/GitHub/mpls-snow-emerg-tows-fines-data/main.R')
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = X, y = Y), color = "black", size = 1, alpha = 0.25
) +
geom_line(data = emergency_routes,
mapping = )
library(tidyverse)
library(ggmap)
library(lubridate)
register_google(key = "AIzaSyBNx8zvPru6GctBpEVpMIg4th6Ymtt0gEk")
tag_files <- list.files(path = "C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tags")
tow_files <- list.files(path = "C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tows")
tow1 <- readr::read_csv(tag_files[1],) %>% rename_all(tolower) # day
tow2 <- readr::read_csv(tag_files[2],) %>% rename_all(tolower) %>% rename(day = "day_id")
tow3 <- readr::read_csv(tag_files[3],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag4 <- readr::read_csv(tag_files[4],) %>% rename_all(tolower)
tag5 <- readr::read_csv(tag_files[5],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag6 <- readr::read_csv(tag_files[6],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag7 <- readr::read_csv(tag_files[7],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag8 <- readr::read_csv(tag_files[8],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag9 <- readr::read_csv(tag_files[9],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag10 <- readr::read_csv(tag_files[10],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag11 <- readr::read_csv(tag_files[11],) %>% rename_all(tolower)   # day
tag12 <- readr::read_csv(tag_files[12],) %>% rename_all(tolower)   # day
tag13 <- readr::read_csv(tag_files[13],) %>% rename_all(tolower)   # day
tag14 <- readr::read_csv(tag_files[14],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag15 <- readr::read_csv(tag_files[15],) %>% rename_all(tolower)   # day
tag16 <- readr::read_csv(tag_files[16],) %>% rename_all(tolower) %>% rename(day = "day_id")
# Trim each file down to (X, Y, date, day)
# Combine each file
tag_dataset <- data.frame()
setwd("C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tags")
for (i in 1:length(tag_files)) {
temp <- readr::read_csv(tag_files[i],) %>% rename_all(tolower)
# change any "day_id"s to "day"
if ("day_id" %in% colnames(temp)) {
temp <- rename(temp, day = "day_id")
}
# change "service_da" to "date" and transform to characters
if ("service_da" %in% colnames(temp)) {
temp <- rename(temp, date = "service_da") %>%
transform(date = as.character(date))
} else {
temp <- transform(temp, date = as.character(date))
}
temp <- select(temp, x, y, date, day)
tag_dataset <- rbind(tag_dataset, temp)
}
# Convert to tibble and fix date column
tags <- transform(tag_dataset, date = as.Date(date)) %>% as_tibble(tag_dataset)
# Trim each file down to (X, Y, date, day)
# Combine each file
tow_dataset <- data.frame()
setwd("C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tows")
for (i in 1:length(tow_files)) {
temp <- readr::read_csv(tow_files[i],) %>% rename_all(tolower)
# change any "day_id"s to "day"
if ("day_identi" %in% colnames(temp)) {
temp <- rename(temp, day = "day_identi")
}
# change "service_da" to "date" and transform to characters
if ("service_da" %in% colnames(temp)) {
temp <- rename(temp, date = "service_da") %>%
transform(date = as.character(date))
} else {
temp <- rename(temp, date ="call_taken")
}
temp <- select(temp, x, y, date, day)
tow_dataset <- rbind(tow_dataset, temp)
}
# To filter out faulty XY data from Polk 2016 Tows
tow_dataset <- filter(tow_dataset, x > -10374957)
# Convert to tibble and fix date column
#tows <-  as_tibble(tow_dataset)
tows <- transform(tow_dataset, date = as.Date(date, format = "%m/%d/%y")) %>% as_tibble(tow_dataset)
bbox <- make_bbox(lon = tags$X, lat = tags$Y, f = .1)
my_map <- get_map(location = bbox, maptype = "roadmap", source = "google", zoom = 12, scale = 2)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = X, y = Y), color = "black", size = 1, alpha = 0.25
) +
geom_line(data = emergency_routes,
mapping = )
tag_files <- list.files(path = "C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tags")
tow_files <- list.files(path = "C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tows")
tow1 <- readr::read_csv(tag_files[1],) %>% rename_all(tolower) # day
tow2 <- readr::read_csv(tag_files[2],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag_files <- list.files(path = "C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tags")
tow_files <- list.files(path = "C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tows")
tow1 <- readr::read_csv(tag_files[1],) %>% rename_all(tolower) # day
tag1 <- readr::read_csv(tag_files[1],) %>% rename_all(tolower) # day
setwd("C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tags")
tag1 <- readr::read_csv(tag_files[1],) %>% rename_all(tolower) # day
tag2 <- readr::read_csv(tag_files[2],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag3 <- readr::read_csv(tag_files[3],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag4 <- readr::read_csv(tag_files[4],) %>% rename_all(tolower)
tag5 <- readr::read_csv(tag_files[5],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag6 <- readr::read_csv(tag_files[6],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag7 <- readr::read_csv(tag_files[7],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag8 <- readr::read_csv(tag_files[8],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag9 <- readr::read_csv(tag_files[9],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag10 <- readr::read_csv(tag_files[10],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag11 <- readr::read_csv(tag_files[11],) %>% rename_all(tolower)   # day
tag12 <- readr::read_csv(tag_files[12],) %>% rename_all(tolower)   # day
tag13 <- readr::read_csv(tag_files[13],) %>% rename_all(tolower)   # day
tag14 <- readr::read_csv(tag_files[14],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag15 <- readr::read_csv(tag_files[15],) %>% rename_all(tolower)   # day
tag16 <- readr::read_csv(tag_files[16],) %>% rename_all(tolower) %>% rename(day = "day_id")
tag4
# Trim each file down to (X, Y, date, day)
# Combine each file
tag_dataset <- data.frame()
setwd("C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tags")
for (i in 1:length(tag_files)) {
temp <- readr::read_csv(tag_files[i],) %>% rename_all(tolower)
# change any "day_id"s to "day"
if ("day_id" %in% colnames(temp)) {
temp <- rename(temp, day = "day_id")
}
# change "service_da" to "date" and transform to characters
if ("service_da" %in% colnames(temp)) {
temp <- rename(temp, date = "service_da") %>%
transform(date = as.character(date))
} else {
temp <- transform(temp, date = as.character(date))
}
temp <- select(temp, x, y, date, day)
tag_dataset <- rbind(tag_dataset, temp)
}
# Convert to tibble and fix date column
tags <- transform(tag_dataset, date = as.Date(date)) %>% as_tibble(tag_dataset)
# Trim each file down to (X, Y, date, day)
# Combine each file
tow_dataset <- data.frame()
setwd("C:/Users/brand/OneDrive/Documents/GitHub/mpls-snow-emerg-tows-fines-data/raw_data/Tows")
for (i in 1:length(tow_files)) {
temp <- readr::read_csv(tow_files[i],) %>% rename_all(tolower)
# change any "day_id"s to "day"
if ("day_identi" %in% colnames(temp)) {
temp <- rename(temp, day = "day_identi")
}
# change "service_da" to "date" and transform to characters
if ("service_da" %in% colnames(temp)) {
temp <- rename(temp, date = "service_da") %>%
transform(date = as.character(date))
} else {
temp <- rename(temp, date ="call_taken")
}
temp <- select(temp, x, y, date, day)
tow_dataset <- rbind(tow_dataset, temp)
}
# To filter out faulty XY data from Polk 2016 Tows
tow_dataset <- filter(tow_dataset, x > -10374957)
# Convert to tibble and fix date column
#tows <-  as_tibble(tow_dataset)
tows <- transform(tow_dataset, date = as.Date(date, format = "%m/%d/%y")) %>% as_tibble(tow_dataset)
bbox <- make_bbox(lon = tags$X, lat = tags$Y, f = .1)
tags
bbox <- make_bbox(lon = tags$x, lat = tags$y, f = .1)
my_map <- get_map(location = bbox, maptype = "roadmap", source = "google", zoom = 12, scale = 2)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = X, y = Y), color = "black", size = 1, alpha = 0.25
) +
geom_line(data = emergency_routes,
mapping = )
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = X, y = Y), color = "black", size = 1, alpha = 0.25
)# +
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 1, alpha = 0.25
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 1, alpha = 0.25
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 1, alpha = 0.25
)
)
)()()
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 1, alpha = 0.25
)
#geom_line(data = emergency_routes,
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 1, alpha = 0.25
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 1, alpha = 0.25
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 1, alpha = 0.25
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2
)
?bbox
?bbox()
??bbox
bbox <- make_bbox(lon = tags$x, lat = tags$y, f = .2)
my_map <- get_map(location = bbox, maptype = "roadmap", source = "google", zoom = 12, scale = 2)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2
)
bbox <- make_bbox(lon = tags$x, lat = tags$y, f = .5)
my_map <- get_map(location = bbox, maptype = "roadmap", source = "google", zoom = 12, scale = 2)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position="none",
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
my_map <- get_map(location = bbox, maptype = "roadmap", source = "google", zoom = 12, scale = 2)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2,
main = "Tickets"
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
main = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2,
title = "Tickets"
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
title = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
?gg_plot
?ggplot
?ggmap
my_map <- get_map(location = bbox, maptype = "roadmap", source = "google", zoom = 12, scale = 2)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2,
show.legend = TRUE
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
show.legend = TRUE
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y), color = "black", size = 0.8, alpha = 0.2,
fill = "Tickets"
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
fill = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y, fill = "Tows"), color = "red", size = 0.8, alpha = 0.2,
fill = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y, fill = "Tows"), color = "red", size = 0.8, alpha = 0.2,
fill = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
) +
scale_fill_manual(name = "Type", values = c("Tickets" = "black", "Tows" = "red"))
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y, fill = "Tows"), color = "red", size = 0.8, alpha = 0.2,
fill = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
) +
scale_fill_manual(name = "Type", values = c("Tows" = "red"))
tags
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = day), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
fill = "Tows"
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
)
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
) +
scale_fill_manual(name = "Type", values = c("Tickets" = "black"))
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
) +
scale_fill_manual(name = "Type", values = c("Tickets" = "black", "Tows" = "red")) +
guides(colour = guide_legend(override.aes = list(alpha=1)))
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
) +
scale_fill_manual(name = "Type", values = c("Tickets" = "black")) +
scale_fill_manual(name = "Type", values = c("Tows" = "red")) +
guides(colour = guide_legend(override.aes = list(alpha=1)))
guides(colour = guide_legend(override.aes = list(alpha=1)))
guides(colour = guide_legend(override.aes = list(alpha=1)))
guides(colour = guide_legend(override.aes = list(alpha=1)))
guides(colour = guide_legend(override.aes = list(alpha=1)))
ggmap(my_map) +
geom_point(data = tags,
mapping = aes(x = x, y = y, fill = "Tickets"), color = "black", size = 0.8, alpha = 0.2
) +
geom_point(data = tows,
mapping = aes(x = x, y = y), color = "red", size = 0.8, alpha = 0.2,
) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
) +
scale_fill_manual(name = "Type", values = c("Tickets" = "black") +
guides(colour = guide_legend(override.aes = list(alpha=1)))
library(diamonds)
library(tidyverse)
